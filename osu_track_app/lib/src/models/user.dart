class User{
  var avatarURL;
  var defaultGroup;
  var id;
  var isOnline;
  var isActive;
  var isBot;
  var isDeleted;
  var isSupporter;
  var username;
  var coverURL;
  var joinDate;
  var countryCode;
  List<dynamic>?monthlyPlayCounts;
  var scoresFirstCount;
  var globalRank;
  var rankedScore;
  var totalPP;
  var totalHits;
  var hitAccuracy;
  var playCount;
  var playTime;
  var maximumCombo;
  var replaysWatched;
  var amountOfSSH;
  var amountOfSS;
  var amountOfS;
  var amountOfSh;
  var amountOfA;
  var countryRank;
  List<dynamic>?rankHistory;
  var kudosu;
  var cover;
  var lastVisit;
  var isRestricted;
  var discord;
  var twitter;
  var hasSupported;
  var interests;
  var location;
  var mainPlaymode;
  var playstyle;
  var postCount;
  var title;
  var badges;
  var favouriteBeatmapsCount;
  var followersCount;
  var graveyardBeatmapsCount;
  var lovedBeatmapsCount;
  var pendingBeatmapsCount;
  var userGroup;
  var userPage;
  var previousUsernames;
  var levelStatistics;
  var supportLevel;
  var userAchievments;
  var pmFriendsOnly;


  User({
    required this.avatarURL,
    required this.defaultGroup,
    required this.id,
    required this.isOnline,
    required this.username,
    required this.coverURL,
    required this.joinDate,
    required this.countryCode,
    required this.monthlyPlayCounts,
    required this.scoresFirstCount,
    required this.globalRank,
    required this.rankedScore,
    required this.totalPP,
    required this.totalHits,
    required this.hitAccuracy,
    required this.playCount,
    required this.playTime,
    required this.maximumCombo,
    required this.replaysWatched,
    required this.amountOfSSH,
    required this.amountOfSS,
    required this.amountOfSh,
    required this.amountOfS,
    required this.amountOfA,
    required this.countryRank,
    required this.hasSupported,
    required this.rankHistory,
    required this.kudosu,
    required this.cover,
    required this.lastVisit,
    required this.postCount,
    required this.isRestricted,
    required this.isSupporter,
    required this.badges,
    required this.favouriteBeatmapsCount,
    required this.followersCount,
    required this.graveyardBeatmapsCount,
    required this.lovedBeatmapsCount,
    required this.pendingBeatmapsCount,
    required this.userGroup,
    required this.userPage,
    required this.previousUsernames,
    required this.levelStatistics,
    required this.supportLevel,
    required this.userAchievments,
    required this.pmFriendsOnly,
    required this.discord,
    required this.twitter,
    required this.interests,
    required this.location,
    required this.mainPlaymode,
    required this.playstyle,

  });

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      avatarURL: json['avatar_url'],
      id: json['id'],
      isOnline: json['is_online'],
      username: json['username'],
      coverURL: json['cover']['custom_url'],
      joinDate: json['join_date'],
      countryCode: json['country_code'],
      monthlyPlayCounts: json['monthly_playcounts'],
      scoresFirstCount: json['scores_first_count'],
      globalRank: json['statistics']['global_rank'],
      rankedScore: json['statistics']['ranked_score'],
      totalPP: json['statistics']['pp'],
      hitAccuracy: json['statistics']['hit_accuracy'],
      totalHits: json['statistics']['total_hits'],
      playCount: json['statistics']['play_count'],
      playTime: json['statistics']['play_time'],
      maximumCombo: json['statistics']['maximum_combo'],
      replaysWatched: json['statistics']['replays_watched_by_others'],
      amountOfSSH: json['statistics']['grade_counts']['ssh'],
      amountOfSS: json['statistics']['grade_counts']['ss'],
      amountOfSh: json['statistics']['grade_counts']['sh'],
      amountOfS: json['statistics']['grade_counts']['s'],
      amountOfA: json['statistics']['grade_counts']['a'],
      countryRank: json['statistics']['country_rank'],
      rankHistory: json['rankHistory']['data'],
      kudosu: json['kudosu']['total'],
      cover: json['cover_url'],
      lastVisit: json['last_visit'],
      postCount: json['post_count'],
      isRestricted: json['is_restricted'],
      badges: json['badges'],
      favouriteBeatmapsCount: json['favourite_beatmapset_count'],
      followersCount: json['followers_count'],
      graveyardBeatmapsCount: json['graveyard_beatmapset_count'],
      lovedBeatmapsCount: json['loved_beatmapset_count'],
      pendingBeatmapsCount: json['pending_beatmapset_count'],
      defaultGroup: json['default_group'],
      userGroup: json['group'],
      userPage: json['page'],
      previousUsernames: json['previous_usernames'],
      levelStatistics: json['statistics']['level'],
      supportLevel: json['support_level'],
      userAchievments: json['user_achievments'],
      isSupporter: json['is_supporter'],
      hasSupported: json['has_supported'],
      pmFriendsOnly: json['pm_friends_only'],
      discord: json['discord'],
      twitter: json['twitter'],
      interests: json['interests'],
      location: json['location'],
      mainPlaymode: json['playmode'],
      playstyle: json['playstyle']

    );
  }
}